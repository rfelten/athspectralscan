
Refactoring:
[x] Merge AthSensor + AthPhy. Remove scan_up/down logic. simplify mode_X() ?
[x] Remove AthReader: -> DumpWriter(w/o Queue) gets sensor (metadata!)
[x] Add DumpReader: read from file/scan0 to file /AthSpectralScanDecoder
[ ] Decoder: add Queues: input + output (list of Queue). input(data), register_output_queue(Queue), start(), stop()

Bugs:
[x] chanscan: use external Process. start on mode_chanscan(), stop on change
[x] chanscan: scan(): os.system() blocks. do not wait
[-] bg/chanscan: remove mode -> use Enum + AthSensor.get_mode()
[x] _find_debug_fs: backport better method from speccy ?
[ ] meta info: read frequency from iw / driver rather than assuming that tune was sucesssuf

(new) Features:
[ ] add HT20/HT40 to config dump
[x] DataHub: create chunks of samples: store <len><samples><samples><data> ... to file. reader can split them up
[x] Decoder: option to omit the (cpu intense) decoding of pwr values
[x] add "disable" to modes
[ ] determine + restore state of network interface
[ ] warn, if ubuntu network manager is active
[x] DumpWriter: add metadata: date+settings
[ ] DumpWriter: add metadata: cpuinfo (?)
[ ] SensorFactory: load config from json file
[ ] SensorDiscovery: Device discovery: via debugfs (?)
[ ] use / create unittests: tester need do match hw spec (e.g. "1x hardware"
[ ] ath10k support (if somebody spend some hardware)

Never part of this lib: (better in high level libs ;)
- Auto-switch channels after X sec in background scan
- SensorOrchestra: Merge samples of multiple sensors
